pipeline {
    agent any
    
    environment {
        SONAR_HOME = tool 'sonar-scanner';
        SONAR_ID = credentials('sonar_student')
        DOCKER_IMAGE_NAME = 'student_frontend'
        DOCKER_USERNAME = 'Rajesh'
        CHART_PATH = './helm'
    }

    tools {
       nodejs 'nodejs-22-16-0'
    }

    stages {
        stage('Installing Dependencies') {
            steps {
                sh 'cd frontend && npm install'
            }
        }
        stage('Dependency Scanning') {
            steps {
                sh 'npm audit --audit-level=critical'
                sh 'npm audit fix'
            }
        }
        stage('Unit Test') {
            options { retry(2) }
            steps {
                sh 'npm test'
            }
        }

        stage('SAST- SonarQube') {
            steps {
                sh 'sleep 5s'
                timeout(time: 60, unit: SECONDS) {
                    withSonarQubeEnv('sonar') {
                        sh 'echo $SONAR_HOME'
                        sh '''
                            $SONAR_HOME/bin/sonar-scanner \
                                -Dsonar.projectKey=Solar-System-Project \
                                -Dsonar.sources=./frontend/ \
                                -Dsonar.host.url=http://localhost:9000 \
                                -Dsonar.login=${SONAR_ID}
                        '''
                    }
                }
            }
        }

        stage('Docker Build') {
            steps {
                sh 'docker build -t ${DOCKER_USERNAME}/${DOCKER_IMAGE_NAME}:${BUILD_NUMBER} -f ./frontend/Dockerfile'
            }
        }

        stage('Trivy Docker Imgage Scan') {
            steps {
                sh '''
                    trivy image ${DOCKER_IMAGE_NAME}:${BUILD_NUMBER} \
                    --severity LOW,MEDIUM,HIGH \
                    --exit code 0 \
                    --quiet \
                    --format json -o student_trivy_MEDIUM_result.json

                    trivy image ${DOCKER_IMAGE_NAME}:${BUILD_NUMBER} \
                    --severity CRITICAL \
                    --exit code 0 \
                    --quiet \
                    --format json -o student_trivy_CRITICAL_result.json
                '''
            }
            post {
                always {
                    sh '''
                        trivy convert \
                            --format template --template "@/usr/local/share/trivy/templates/html.tpl" \
                            --output student_trivy_MEDIUM_result.html student_trivy_MEDIUM_result.json

                        trivy convert \
                            --format template --template "@/usr/local/share/trivy/templates/html.tpl" \
                            --output student_trivy_CRITICAL_result.html student_trivy_CRITICAL_result.json
                    '''
                }
            }
        }

        // stage('Docker Image Push') {
        //     withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USER')]) {
        //         sh 'docker push ${DOCKER_USERNAME}/${DOCKER_IMAGE}:${BUILD_NUMBER}'
        //     }
        // }

        // stage('Stop & Run In Docker composer') {
        //     steps {
        //         sh '''
        //             docker compose down || true
        //         '''
        //         sh 'docker compose up'
        //     }
        // }

        // stage('Deploy In K8s') {
        //     steps {
        //         helm upgrade --install student_app ${CHART_PATH} \
        //         --namespace student_app \
                

        //     }
        // }
    }
}